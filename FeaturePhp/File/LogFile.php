<?

/**
 * The FeaturePhp\File\LogFile class.
 */

namespace FeaturePhp\File;
use \FeaturePhp as fphp;

/**
 * A text file containing generator logs.
 * A log file is a {@see TextFile} generated by a {@see \FeaturePhp\Generator\Generator}.
 * It contains a log of a generator's actions (in particular, generated files).
 */
class LogFile extends TextFile {
    /**
     * @var array[] $logs an array of array($artifact, $content)'s with logging information
     */
    private $logs;

    /**
     * Creates a log file.
     * @param string $fileTarget
     */
    public function __construct($fileTarget) {
        parent::__construct("logs/$fileTarget.log");
        $this->logs = array();
    }

    /**
     * Creates an entry in the log file.
     * @param \FeaturePhp\Artifact\Artifact|null $artifact a log entry may refer to an artifact
     * @param string $content
     */
    public function log($artifact, $content) {
        $this->logs[] = array($artifact, $content);
    }

    /**
     * Returns the log file's content.
     * Tabular output is generated.
     * @return TextFileContent
     */
    public function getContent() {
        $content = "";
        $maxLen = 0;

        foreach ($this->logs as $log)
            if ($log[0]) {
                $name = $log[0]->getFeature()->getName();
                $maxLen = strlen($name) > $maxLen ? strlen($name) : $maxLen;
            }
        
        foreach ($this->logs as $log)
            $content .= sprintf("%-{$maxLen}s | $log[1]\n", $log[0] ? $log[0]->getFeature()->getName() : "");
        
        return new TextFileContent($content);
    }
}

?>